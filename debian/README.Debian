
 SNORT WITH DATABASE SUPPORT
------------------------------
 If you are using snort-pgsql or snort-mysql please notice that you have
 to create the database structure right after installing the package
 and start Snort manually.

 In order to create the database structure do:

 - if using PostgreSQL
   $ cd /usr/share/doc/snort-pgsql/
   $  zcat create_postgresql.gz | psql -U <user> -h <host> -W <databasename>

 - if using MySQL
   $ cd /usr/share/doc/snort-mysql/
   $ zcat create_mysql.gz | mysql -u <user> -h <host> -p <databasename>

 In either case fill in the correct values for the user, host, and 
 database names. Depending on the user priviledges set on the database
 you can use the same user that Snort will use to access the
 database or an admin user. In either case, the user you use should
 have priviledges to create tables and indexes. Once created you have
 to grant the user your configured in Debconf so that it has priviledges
 over the tables created through the schema.

 Once you have setup the database, you will need to start Snort manually
 since it was left unstarted after the installation. To do this
 remove the file '/etc/snort/db-pending-config' and then
 do '/etc/init.d/snort start'. Confirm that snort is working and up
 by running '/etc/init.d/snort status' and reviewing the messages in
 the /var/log/daemon.log syslog file.

 SNORT ON MULTIPLE INTERFACES
------------------------------

This package of snort is capable of managing multiple interfaces.  The
current init.d script is capable of launching more than one snort
instance. You just need to answer the debconf question "On which
interface(s) should snort listen on" with a list (separated by spaces
of interafes you want to use). This actually modifies the value of 
DEBIAN_SNORT_INTERFACE definition in /etc/snort/snort.debian.conf.

Afterwards, you need to create different
/etc/snort/snort.$INTERFACE.conf configuration files (where $INTERFACE
is your interface names, e.g., eth0 or eth1) for each interface you
want Snort to listen on. All sensors can use the same rule set so it's
easy to update them and all your sensors simultaneously. If no
/etc/snort/snort.$INTERFACE.conf file exists for a given interface,
then the regular /etc/snort/snort.conf file is used.

Notice, however, that the same HOME_NET definition will be used for
all interfaces (the answer to the "address range snort will listen
on"). The debconf scripts don't currently support a way to give
different HOME_NET definitions to different interfaces.

This is still work in progress. Please file bugs to the snort package.

-----------------------------------------------------------------------------

-----------------------------------------------------------------------------

 FREQUENT QUESTIONS AND ANSWERS
---------------------------------

Q.  I want to use FLEXRESP rules, but snort won't start with those rules
    enabled! What is wrong, what should I do?
A.	FLEXRESP rules need root-priviledges to access raw ethernet interface.
    To resolve this, start snort as root.

Q0. I can reconfigure snort as often as I want but it won't ask me any
    questions!
A0. You are probably victim of a bug in an older version of debconf. Just do:
    dpkg-reconfigure --priority=low debconf; dpkg-reconfigure snort

Q1. How can I test snort without having an ethernet card or a connection
    to other computers ?
A1. You have to use routing between two dummy devices:
    # modprobe -a dummy    (The dummy device has to be build by the kernel)
    # ifconfig dummy0   192.168.0.1
    # ifconfig dummy0:0 192.168.0.2
    # telnet 192.168.0.3 12345

    It's important that the second IP is on the same interface and not
    e.g. dummy1 or dummy2 and that the IP you try to access is *not* one
    of those you put on the interfaces. Use snort's ability to hear in
    promiscuous mode on an IP address range. (HOMEDIR=192.168.0.0/16)

Q2. I saw that syslog logging is enabled, but I can't see any warnings in
    /var/log/syslog ?
A2. That's because /etc/syslog.conf directs every output for the syslog
    facility LOG_AUTH to the /var/log/auth.log file. You can still find
    detail information about every logged scan in /var/log/snort/.

Q3. You told me about the files in /var/log/snort, but I can't read them!
A3. For performance reasons they are logged in tcpdump-binary format. You 
    can read them with "tcpdump -r /var/log/snort/snort.log" or 
	mkdir /tmp/dir
    	cd /etc/snort
	. snort.conf
	snort -r /var/log/snort/snort.log \
		-S "HOME_NET=$DEBIAN_SNORT_HOME_NET" \
		-c /etc/snort/snort.conf-lib \
		-l /tmp/dir
    The "-l /tmp/dir" creates the files in the /tmp/dir directory which MUST
    be existing. You can use -s instead for logging to /var/log/auth.log.
    
Q4. It seems you disabled some checks and modified snort-lib, why?
A4. Because they either generated too many false positives or generate too 
    much noise for harmless things like traceroutes or nmap fingerprint 
    attempts. These modifications are marked by a leading #debian#.
    For more information see /usr/share/doc/snort/README.Maintainer.

Q5. How can I update my rule database with the Debian packages? 
    (Hint: I'm running stable)
A5. Signature updates are provided by the snort-rules-default package but
    if you are using stable, you will not see any changes in that package
    since they are not allowed for stable releases. If you want to keep
    your ruleset up-to-date you have two options:

    	- Use the snort-rules-default from the unstable distribution, this
	  might work as long as it does not belong to a different Snort
	  release since in between releases snort rules might be updated
	  in such a way that they are not backwards compatible.
	- Use a script to manage rule updates, such as 'oinkmaster' (currently
	  provided as a Debian package) or 'updateSnort'
	- Use a backported version of Snort which includes these signatures.

   Always make sure that your new rules will be loaded fine by the sensor
   by using 'snort -T' 

   See also upstreams Snort FAQ item 3.18

 -- Javier Fernandez-Sanguino Pen~a <jfs@debian.org>, Wed Dec  1 17:01:30 2004
