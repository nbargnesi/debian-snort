#!/bin/sh -e

. /usr/share/debconf/confmodule

[ -r /etc/snort/snort.debian.conf ] && . /etc/snort/snort.debian.conf

INTERFACES=""

check_interfaces() {
# Check the interface status, abort with error if a configured one is not
# available
      [ -z "$INTERFACES" ] && return 0
      ints=`echo $INTERFACES | sed -e  's/,/ /g'`
      for iface in $ints; do
              if ! ifconfig "$iface" | grep -w UP >/dev/null; then
                      return 1
             fi
      done
      return 0
}

db_input low snort-pgsql/startup || true
db_go

# /etc/ppp/ip-up.d/snort-pgsql is called with interface and IP number
db_get snort-pgsql/startup
if [ "x$RET" = "xdialup" ]; then
  db_set snort-pgsql/interface ""
  db_set snort-pgsql/address_range ""
  db_set snort-pgsql/disable_promiscuous true
else
  db_beginblock
  # Interface default in case the configuration file does not exist
  if [ -z "$DEBIAN_SNORT_INTERFACE" ] ; then
        INTERFACES=eth0
  else
        INTERFACES=$DEBIAN_SNORT_INTERFACE
  fi

  # Ask for a valid set of interfaces
  ok=''
  count=0
  while [ ! "$ok" ] && [ "$count" -lt 2 ]; do
  # Depending on whether the default interface is up or down we set the
  # question priority
        priority='medium'
        if ! check_interfaces
        then
            priority='high'
            db_fset snort-pgsql/interface seen false
        fi
        set +e
        db_input $priority snort-pgsql/interface
        if [ $? -eq 30 ]; then
        # User is not being shown the question, break out
             break
        fi
        set -e
        db_go || true
   # Check the interfaces
        db_get snort-pgsql/interface
        INTERFACES=$RET
        if ! check_interfaces ; then
          db_fset snort/invalid_interface seen false
          db_input critical snort/invalid_interface
        else
          ok='yes'
        fi
        # Increment the count, we only go through this two times
        count=$(($count+1))
  done

  db_input high snort-pgsql/address_range || true
  db_input low snort-pgsql/disable_promiscuous || true
  db_endblock
  db_go
fi

db_beginblock
db_input low snort-pgsql/options || true
db_endblock
db_go

db_beginblock
db_input low snort-pgsql/send_stats || true
db_go

db_get snort-pgsql/send_stats
if [ "x$RET" = "xtrue" ]; then
# TODO: This values should not be empty (even
# if we default to 'root' and '1' in the scripts)
# so the config script should check wether the 
# values here are legitimate.
	db_beginblock
	db_input medium snort-pgsql/stats_rcpt || true
	db_input low snort-pgsql/stats_treshold || true
	db_endblock
	db_go
fi

db_input high snort-pgsql/configure_db || true
db_go
db_get snort-pgsql/configure_db
if  [ "x$RET" = "xtrue" ]; then
	db_beginblock
	db_input medium snort-pgsql/db_host || true
	db_input medium snort-pgsql/db_database || true
	db_input medium snort-pgsql/db_user || true
	db_input medium snort-pgsql/db_pass || true
# Use the old name for the Debconf value if it exists
	db_get snort-pgsql/wait_for_db_config || true
	if  [ "x$RET" = "xtrue" ]; then
		db_set snort-pgsql/needs_db_config "true" || true
	else
		db_input high snort-pgsql/needs_db_config || true
	fi
	db_endblock
	db_go
fi

DEFAULT=/etc/default/snort
PARAMETERS=/etc/snort/snort.common.parameters
if [ -e "$DEFAULT" ] && [ -e "$PARAMETERS" ] ; then
        db_beginblock
        db_input high snort-pgsql/config_parameters || true
        db_endblock
        db_go
fi

db_get snort-pgsql/startup
if [ "x$RET" = "xmanual" ]; then
	db_beginblock
	db_input medium snort-pgsql/please_restart_manually || true
	db_endblock
	db_go
fi

db_stop
