diff -u snort-2.7.0/debian/changelog snort-2.7.0/debian/changelog
--- snort-2.7.0/debian/changelog
+++ snort-2.7.0/debian/changelog
@@ -1,3 +1,14 @@
+snort (2.7.0-19+lenny1) testing-security; urgency=high
+
+  * Non-maintainer upload by the security team.
+  * Fix error in preprocessors/spp_frag3.c that prevented Snort from properly
+    identifying packet fragments that had dissimilar TTL values, which allowed
+    remote attackers to bypass detection rules by using a different TTL for
+    each fragment. Also update src/generators.h to include the new FRAG3_MIN_TTL
+    defines (CVE-2008-1804; Closes: #483160)
+
+ -- Nico Golde <nion@debian.org>  Sun, 02 Nov 2008 14:02:02 +0100
+
 snort (2.7.0-19) unstable; urgency=low
 
   * Make the snort_rules_update example script use bash instead of sh.
only in patch2:
unchanged:
--- snort-2.7.0.orig/src/generators.h
+++ snort-2.7.0/src/generators.h
@@ -227,6 +227,7 @@
 #define     FRAG3_ANOMALY_OVLP                      8
 #define     FRAG3_IPV6_BSD_ICMP_FRAG                9
 #define     FRAG3_IPV6_BAD_FRAG_PKT                10
+#define     FRAG3_MIN_TTL_EVASION                  11
 
 #define GENERATOR_SMTP                             124
 #define     SMTP_COMMAND_OVERFLOW                  1
@@ -332,6 +333,7 @@
 #define FRAG3_ANOM_OVLP_STR "(spp_frag3) Fragmentation overlap"
 #define FRAG3_IPV6_BSD_ICMP_FRAG_STR "(spp_frag3) IPv6 BSD mbufs remote kernel buffer overflow"
 #define FRAG3_IPV6_BAD_FRAG_PKT_STR "(spp_frag3) Bogus fragmentation packet. Possible BSD attack"
+#define FRAG3_MIN_TTL_EVASION_STR "(spp_frag3) TTL value less than configured minimum, not using for reassembly"
 
 /*   Stream5 strings */
 #define     STREAM5_SYN_ON_EST_STR "Syn on established session"
only in patch2:
unchanged:
--- snort-2.7.0.orig/src/preprocessors/spp_frag3.c
+++ snort-2.7.0/src/preprocessors/spp_frag3.c
@@ -495,7 +495,7 @@
     LogMessage("    Fragment timeout: %d seconds\n", 
             context->frag_timeout);
     LogMessage("    Fragment min_ttl:   %d\n", context->min_ttl);
-    LogMessage("    Fragment ttl_limit: %d\n", context->ttl_limit);
+    LogMessage("    Fragment ttl_limit (not used): %d\n", context->ttl_limit);
     LogMessage("    Fragment Problems: %X\n", context->frag3_alerts);
     //LogMessage("    Bound Addresses:\n");
     IpAddrSetPrint("    Bound Addresses: ", context->bound_addrs);
@@ -695,6 +695,29 @@
 }
 
 /**
+ * Generate an event due to TTL below the configured minimum
+ *
+ * @param context Current run context
+ *
+ * @return none
+ */
+static INLINE void EventAnomMinTTL(Frag3Context *context)
+{
+    if(!(context->frag3_alerts & FRAG3_DETECT_ANOMALIES))
+        return;
+
+    SnortEventqAdd(GENERATOR_SPP_FRAG3, /* GID */ 
+            FRAG3_MIN_TTL_EVASION,   /* SID */
+            1,                       /* rev */
+            0,                       /* classification enum */
+            3,                       /* priority (low) */
+            FRAG3_MIN_TTL_EVASION_STR,  /* event message */
+            NULL);                   /* rule info ptr */
+
+   f3stats.alerts++;
+}
+
+/**
  * Main setup function to regiser frag3 with the rest of Snort.
  *
  * @param none
@@ -1533,6 +1556,7 @@
                  */
                 p->fragtracker = NULL;
             }
+            LogMessage("%s(%d) ==> The ttl_limit option will be ignored, and Use of the ttl_limit option will be deprecated in a future release\n");
         }
 
         Frag3RemoveTracker(&fkey, ft);
@@ -2192,6 +2216,7 @@
             "(len: %d  slide: %d  trunc: %d)\n", 
             len, slide, trunc););
 
+        EventAnomMinTTL(f3context);
         f3stats.discards++;
 
 #ifdef DEBUG
@@ -2435,7 +2460,9 @@
     int done = 0;           /* flag for right-side overlap handling loop */
     int addthis = 1;           /* flag for right-side overlap handling loop */
     int i = 0;              /* counter */
+#if 0
     int delta = 0;
+#endif
     int firstLastOk;
     int ret = FRAG_INSERT_OK;
     unsigned char lastfrag = 0; /* Set to 1 when this is the 'last' frag */
@@ -2493,6 +2520,7 @@
         //return FRAG_INSERT_TIMEOUT;
     }
 
+#if 0
     delta = abs(ft->ttl - p->iph->ip_ttl);
     if (delta > f3context->ttl_limit)
     {
@@ -2502,6 +2530,7 @@
         PREPROC_PROFILE_END(frag3InsertPerfStats);
         return FRAG_INSERT_TTL;
     }
+#endif
 
     /*
      * Check to see if this fragment is the first or last one and
only in patch2:
unchanged:
